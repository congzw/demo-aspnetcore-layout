@page
@using NbApp.Srvs.DotnetCli;
@using System.Diagnostics;
@model ExecPageModel
@{
    var input = $"{this.Model.Target} {this.Model.Arguments}";
    var output = $"{this.Model.Output}";
    var shellExecModel = ShellExecModel.Create(input, output);
    if (this.Model.CliCmdResult != null)
    {
        shellExecModel.Input = $"{this.Model.Target} {this.Model.CliCmdResult.Arguments}";
        shellExecModel.Success = this.Model.CliCmdResult.Success;
    }
}

@functions {
    public class ExecPageModel : PageModel
    {
        [BindProperty]
        public string Target { get; set; }

        [BindProperty]
        public string Arguments { get; set; }

        public string Output { get; set; }

        [TempData]
        public string cliJson { get; set; }

        public MyCliCommandResult CliCmdResult { get; set; }

        public void OnGet()
        {
            if (string.IsNullOrWhiteSpace(cliJson))
            {
                Target = "dotnet";
                Arguments = "--version";
            }
            else
            {
                var cliCmdResult = cliJson.FromJson<MyCliCommandResult>(null);
                if (cliCmdResult != null)
                {
                    Target = cliCmdResult.Target;
                    Arguments = string.Join('\n', cliCmdResult.ArgumentItems);
                    Output = cliCmdResult.Output;
                }
                CliCmdResult = cliCmdResult;
            }
            Console.WriteLine($"OnGet: {Target} {Arguments} {Output}");
        }

        public async Task<IActionResult> OnPost()
        {
            //todo: validate
            var cliHelper = MyCliHelper.Instance;
            var argumentsArray = cliHelper.ParseToArgumentsArray(Arguments, '\n');
            Console.WriteLine($"OnPost: {Target} {Arguments} => {argumentsArray.ToJson()}");
            var cliCmd = cliHelper.CreateCommand(Target, argumentsArray);
            var cliCmdResult = await cliCmd.ExecuteBufferedAsync(false);
            TempData["cliJson"] = cliCmdResult.ToJson();
            return RedirectToPage("Exec");
        }
    }
}

<partial name="Shell/_ShellExec" model="shellExecModel"></partial>
<div class="card m-3">
    <h5 class="card-header">脚本参数</h5>
    <div class="card-body">
        <form class="layui-form" action="" method="post">
            <div class="layui-form-item">
                <label asp-for="Target" class="layui-form-label">
                    目标:
                </label>
                <div class="layui-input-block">
                    <input type="text" name="Target" required lay-verify="required" placeholder="请输入目标" autocomplete="off" class="layui-input" asp-for="Target">
                </div>
            </div>
            <div class="layui-form-item">
                <label asp-for="Arguments" class="layui-form-label">
                    参数:
                </label>
                <div class="layui-input-block">
                    <textarea placeholder="请输入参数，多个参数请换行" class="layui-textarea" autocomplete="off" name="Arguments" asp-for="Arguments"></textarea>
                </div>
            </div>

            <div class="layui-form-item">
                <div class="layui-input-block">
                    <button class="layui-btn" lay-submit lay-filter="formDemo">执行脚本</button>
                    <button type="reset" class="layui-btn layui-btn-primary">重置</button>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        //layui.use(['layer', 'form'], function () {
        //    var layer = layui.layer
        //        , form = layui.form;

        //    layer.msg('Hello World');
        //});

        //Demo
        layui.use('form', function () {
            var form = layui.form;
            //监听提交
            form.on('submit(formDemo)', function (data) {
                //layer.msg(JSON.stringify(data.field));
                //return false;
                console.log(data.field);
                var theModel = data.field;
                return true;
            });
        });

    </script>
}
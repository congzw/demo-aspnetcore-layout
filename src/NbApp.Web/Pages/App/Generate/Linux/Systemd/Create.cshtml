@page
@using System.ComponentModel;
@using NbApp.Srvs.GenerateFiles;
@using System.Reflection;
@using System.IO;
@model CreatePageModel
@{
    var vo = this.Model;
    var viewPath = this.ViewContext.View.Path;
    var saveLocation = GenerateFileHelper.Instance.GuessHref(this.ViewContext.View.Path, "");

    var srv_dir = AppDomain.CurrentDomain.BaseDirectory;
    var srv_name = System.IO.Path.GetFileNameWithoutExtension(Assembly.GetEntryAssembly().Location);
    if (string.IsNullOrWhiteSpace(vo.TemplateVoJson))
    {
        vo.TemplateVoJson = SystemdTemplateVo.Create(srv_dir, srv_name).ToJson(true);
    }
    if (string.IsNullOrWhiteSpace(vo.FileName))
    {
        vo.FileName = $"{srv_name}.service";
    }

    var templateVo = vo.TemplateVoJson.FromJson<SystemdTemplateVo>(null);
    var templateVoJsonRow = vo.TemplateVoJson.Split('\n').Length;

    var generateContent = "";
    using (var sw = new StringWriter())
    {
        var partialHtml = await Html.PartialAsync("_Template", templateVo);
        partialHtml.WriteTo(sw, this.HtmlEncoder);
        generateContent = sw.ToString();
    }
    var generateContentRow = generateContent.Split('\n').Length;
    //var generateVo = GenerateFileHelper.Instance.Create(this.ViewContext.View.Path, vo.FileName);
}

@functions {
    public class CreatePageModel : PageModel
    {

        [BindProperty]
        public string TemplateVoJson { get; set; }
        [TempData]
        public string _templateVoJson { get; set; }
        public void OnGet()
        {
            if (!string.IsNullOrWhiteSpace(_fileName))
            {
                FileName = _fileName;
            }
            if (!string.IsNullOrWhiteSpace(_templateVoJson))
            {
                TemplateVoJson = _templateVoJson;
            }
        }

        public async Task<IActionResult> OnPostGenerate()
        {
            //todo: validate
            await Task.CompletedTask;
            Console.WriteLine($"OnPostGenerate: {TemplateVoJson}");
            TempData["_templateVoJson"] = TemplateVoJson;
            return RedirectToPage("Create");
        }

        [BindProperty]
        public string SaveContent { get; set; }
        [BindProperty]
        public string FileName { get; set; }
        [TempData]
        public string _fileName { get; set; }

        public async Task<IActionResult> OnPostSave()
        {
            //todo: validate
            await Task.CompletedTask;
            Console.WriteLine($"OnPostSave: {FileName} {SaveContent}");
            //todo save
            return RedirectToPage("Create");
        }
    }
}

<div class="card m-3">
    <h5 class="card-header">脚本内容</h5>
    <div class="card-body">
        <form class="layui-form layui-form-pane" action="./Create?handler=Generate" method="post">
            <div class="layui-form-item layui-form-text">
                <label for="TemplateVoJson" class="layui-form-label">
                    生成参数:
                </label>
                <div class="layui-input-block">
                    <textarea placeholder="生成参数(JSON)" class="layui-textarea" autocomplete="off" name="TemplateVoJson" rows="@templateVoJsonRow">@vo.TemplateVoJson</textarea>
                </div>
            </div>
            <div class="layui-form-item">
                <button class="layui-btn" lay-submit lay-filter="formGenerate">生成</button>
                <button type="reset" class="layui-btn layui-btn-primary">重置</button>
            </div>
        </form>
    </div>
</div>

<div class="card m-3">
    <div class="card-body">
        <nav>
            <div class="nav nav-tabs" id="nav-tab" role="tablist">
                <button class="nav-link active" id="nav-tab-preview" data-bs-toggle="tab" data-bs-target="#nav-content-preview" type="button" role="tab" aria-controls="nav-content-preview" aria-selected="true">
                    预览
                </button>
                <button class="nav-link" id="nav-tab-save" data-bs-toggle="tab" data-bs-target="#nav-content-save" type="button" role="tab" aria-controls="nav-content-save" aria-selected="false">
                    保存
                </button>
            </div>
        </nav>
        <div class="tab-content" id="nav-tabContent">
            <div class="tab-pane fade show active" id="nav-content-preview" role="tabpanel" aria-labelledby="nav-tab-preview" tabindex="0">
                <pre><code class="language-shell">@generateContent</code></pre>
            </div>
            <div class="tab-pane fade" id="nav-content-save" role="tabpanel" aria-labelledby="nav-tab-save" tabindex="1">
                <form class="layui-form layui-form-pane" action="./Create?handler=Save" method="post">
                    <div class="layui-form-item layui-form-text">
                        <div class="layui-input-block">
                            <textarea placeholder="生成内容" class="layui-textarea" autocomplete="off" name="SaveContent" rows="@generateContentRow">@generateContent</textarea>
                        </div>
                    </div>

                    <div class="layui-form-item">
                        <label for="FileName" class="layui-form-label">
                            文件名称:
                        </label>
                        <div class="layui-input-block">
                            <input type="text" required lay-verify="required" placeholder="文件名称" autocomplete="off" class="layui-input" name="FileName" value="@vo.FileName">
                        </div>
                    </div>

                    <div class="layui-form-item">
                        <button class="layui-btn" lay-submit lay-filter="formSave">保存</button>
                        <button type="reset" class="layui-btn layui-btn-primary">重置</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
